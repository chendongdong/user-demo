var storage = require('../../../config/sessionStorage')
module.exports = {

  _init: function () {
    if (!this.options.Vue.router) {
      return 'vue-router.2.x.js : Vue.router must be set.'
    }
  },

  _bindData: function (data, ctx) {
    var error, success

    data = data || {}

    error = data.error
    success = data.success

    data.query = ctx.$route.query || {}

    if (data.success) { data.success = function (res) { success.call(ctx, res) } }
    if (data.error) { data.error = function (res) { error.call(ctx, res) } }

    return data
  },

  _beforeEach: function (routerBeforeEach, transitionEach) {

    var _this = this
    this.options.Vue.router.beforeEach(function (transition, location, next) {
      // console.log('to--transition=', transition)
      // console.log('from--location=', location)
      // console.log('next=', next)
      routerBeforeEach.call(_this, function () {
        // 如果是曾经扫码进入科室主页的，点击公众号菜单直接进入科室主页
        if (transition.name === 'Home') {
          var qrCodeData = window.localStorage.getItem(storage.LOCATION_DATA.QRCODE_DEPT)
          if (qrCodeData && JSON.parse(qrCodeData).enter === 'qrcode') {
            var deptPath = '/main/special-dept/' + JSON.parse(qrCodeData).deptId
            this.options.router._routerReplace.call(this, deptPath)
          }
        }
        var auth
        if (transition.to) {
          auth = transition.to.auth
        } else {
          var authRoutes = transition.matched.filter(function (route) {
            return route.meta.hasOwnProperty('auth')
          })
          // matches the nested route, the last one in the list
          if (authRoutes.length) {
            auth = authRoutes[authRoutes.length - 1].meta.auth
          }
        }
        transitionEach.call(_this, auth, function (redirect) {
          if (!redirect) {
            (next || transition.next)()
            return
          }
          // router v2.x
          if (next) {
            next(redirect)
          } else {
            this.options.router._routerReplace.call(this, redirect)
          }
        })
      })
    })
  },

  _routerReplace: function (data) {
    var router = this.options.Vue.router

    router.replace.call(router, data)
  },

  _routerGo: function (data) {
    var router = this.options.Vue.router
    var go = router.push || router.go
    go.call(router, data)
  }

}
